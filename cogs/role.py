import discord
import settings
from discord.ext import commands

class CountrySelectAdd(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–†–æ—Å—Å–∏—è–Ω–∏–Ω", emoji="üá∑üá∫", description="–†–æ—Å—Å–∏—è"),
            discord.SelectOption(label="–£–∫—Ä–∞–∏–Ω–µ—Ü", emoji="üá∫üá¶", description="–£–∫—Ä–∞–∏–Ω–∞"),
            discord.SelectOption(label="–ë–µ–ª–æ—Ä—É—Å", emoji="üáßüáæ", description="–ë–µ–ª–æ—Ä—É—Å—å"),
            discord.SelectOption(label="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ—Ü", emoji="üá∞üáø", description="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–£–∑–±–µ–∫", emoji="üá∫üáø", description="–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ê—Ä–º—è–Ω–∏–Ω", emoji="üá¶üá≤", description="–ê—Ä–º–µ–Ω–∏—è"),
            discord.SelectOption(label="–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω–µ—Ü", emoji="üá¶üáø", description="–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω"),
            discord.SelectOption(label="–ú–æ–ª–¥–∞–≤–∞–Ω–∏–Ω", emoji="üá≤üá©", description="–ú–æ–ª–¥–∞–≤–∏—è"),
            discord.SelectOption(label="–¢–∞–¥–∂–∏–∫", emoji="üáπüáØ", description="–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ö–∏—Ä–≥–∏–∑", emoji="üá∞üá¨", description="–ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ï–≤—Ä–æ–ø–µ–µ—Ü", emoji="üá™üá∫", description="–ï–≤—Ä–æ–ø–∞"),
        ]
        super().__init__(placeholder="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:countryadd')

    async def callback(self, interaction: discord.Interaction):
        ru = interaction.guild.get_role(997425518460817470)
        ua = interaction.guild.get_role(997425520675397682)
        kz = interaction.guild.get_role(997425521736568842)
        by = interaction.guild.get_role(997425519693942784)
        uz = interaction.guild.get_role(997425522650914866)
        am = interaction.guild.get_role(997425523460427878)
        az = interaction.guild.get_role(997425523946946612)
        md = interaction.guild.get_role(997425525494657054)
        tj = interaction.guild.get_role(997425526434168832)
        kg = interaction.guild.get_role(997425527017177189)
        eu = interaction.guild.get_role(1027289604862251017)
        roles = interaction.user.roles

        def check(r):
            listt = [ru, ua, kz, by, uz, am, az, md, tj, kg, eu]
            listt.remove(r)
            for rr in listt:
                if rr in roles:
                    return False
            return True
        async def process(rolee):
            if rolee not in roles:
                await interaction.user.add_roles(rolee)
                return True


        if self.values[0] == "–†–æ—Å—Å–∏—è–Ω–∏–Ω": give = ru
        if self.values[0] == "–£–∫—Ä–∞–∏–Ω–µ—Ü": give = ua
        if self.values[0] == "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ—Ü": give = kz
        if self.values[0] == "–£–∑–±–µ–∫": give = uz
        if self.values[0] == "–ê—Ä–º—è–Ω–∏–Ω": give = am
        if self.values[0] == "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω–µ—Ü": give = az
        if self.values[0] == "–ú–æ–ª–¥–æ–≤–∞–Ω–∏–Ω": give = md
        if self.values[0] == "–¢–∞–¥–∂–∏–∫": give = tj
        if self.values[0] == "–ö–∏—Ä–≥–∏–∑": give = kg
        if self.values[0] == "–ï–≤—Ä–æ–ø–µ–µ—Ü": give = eu

        if check(give):
            if await process(give):
                await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!*', ephemeral = True)
        if check(give) is False:
            await interaction.response.send_message(f'*–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–¥–Ω–∞ –∏–∑ —Ä–æ–ª–µ–π —Å—Ç—Ä–∞–Ω!\n–£–±–µ—Ä–∏—Ç–µ –µ–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.*', ephemeral = True)

class CountrySelectRemove(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–†–æ—Å—Å–∏—è–Ω–∏–Ω", emoji="üá∑üá∫", description="–†–æ—Å—Å–∏—è"),
            discord.SelectOption(label="–£–∫—Ä–∞–∏–Ω–µ—Ü", emoji="üá∫üá¶", description="–£–∫—Ä–∞–∏–Ω–∞"),
            discord.SelectOption(label="–ë–µ–ª–æ—Ä—É—Å", emoji="üáßüáæ", description="–ë–µ–ª–æ—Ä—É—Å—å"),
            discord.SelectOption(label="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ—Ü", emoji="üá∞üáø", description="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–£–∑–±–µ–∫", emoji="üá∫üáø", description="–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ê—Ä–º—è–Ω–∏–Ω", emoji="üá¶üá≤", description="–ê—Ä–º–µ–Ω–∏—è"),
            discord.SelectOption(label="–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω–µ—Ü", emoji="üá¶üáø", description="–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω"),
            discord.SelectOption(label="–ú–æ–ª–¥–∞–≤–∞–Ω–∏–Ω", emoji="üá≤üá©", description="–ú–æ–ª–¥–∞–≤–∏—è"),
            discord.SelectOption(label="–¢–∞–¥–∂–∏–∫", emoji="üáπüáØ", description="–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ö–∏—Ä–≥–∏–∑", emoji="üá∞üá¨", description="–ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω"),
            discord.SelectOption(label="–ï–≤—Ä–æ–ø–µ–µ—Ü", emoji="üá™üá∫", description="–ï–≤—Ä–æ–ø–∞"),
        ]
        super().__init__(placeholder="–£–±—Ä–∞—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:countryremove')

    async def callback(self, interaction: discord.Interaction):
        ru = interaction.guild.get_role(997425518460817470)
        ua = interaction.guild.get_role(997425520675397682)
        kz = interaction.guild.get_role(997425521736568842)
        by = interaction.guild.get_role(997425519693942784)
        uz = interaction.guild.get_role(997425522650914866)
        am = interaction.guild.get_role(997425523460427878)
        az = interaction.guild.get_role(997425523946946612)
        md = interaction.guild.get_role(997425525494657054)
        tj = interaction.guild.get_role(997425526434168832)
        kg = interaction.guild.get_role(997425527017177189)
        eu = interaction.guild.get_role(1027289604862251017)
        roles = interaction.user.roles

        def check():
            listt = [ru, ua, kz, by, uz, am, az, md, tj, kg, eu]
            for rr in listt:
                if rr in roles:
                    return True
            return False
        async def process(rolee):
            if rolee in roles:
                await interaction.user.remove_roles(rolee)
                return False


        if self.values[0] == "–†–æ—Å—Å–∏—è–Ω–∏–Ω": give = ru
        if self.values[0] == "–£–∫—Ä–∞–∏–Ω–µ—Ü": give = ua
        if self.values[0] == "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ—Ü": give = kz
        if self.values[0] == "–£–∑–±–µ–∫": give = uz
        if self.values[0] == "–ê—Ä–º—è–Ω–∏–Ω": give = am
        if self.values[0] == "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω–µ—Ü": give = az
        if self.values[0] == "–ú–æ–ª–¥–æ–≤–∞–Ω–∏–Ω": give = md
        if self.values[0] == "–¢–∞–¥–∂–∏–∫": give = tj
        if self.values[0] == "–ö–∏—Ä–≥–∏–∑": give = kg
        if self.values[0] == "–ï–≤—Ä–æ–ø–µ–µ—Ü": give = eu

        if check() and await process(give) is False:
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω–∞!*', ephemeral = True)
        if check() is False:
            await interaction.response.send_message(f'*–£ –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Ä–æ–ª–∏!*', ephemeral = True)

class AccessSelectAdd(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ù—é—Ö–∞–π –∫–æ—Å–º–æ—Å", emoji="üåå", description="–ß—Ç–æ —Å—Ç–æ–∏—à—å? –ù—é—Ö–∞–π!"),
            discord.SelectOption(label="–î–∏—Å–∫—É—Å—Å–∏–∏", emoji="üí¢", description="–õ–∞–¥–Ω–æ."),
        ]
        super().__init__(placeholder="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:accessadd')

    async def callback(self, interaction: discord.Interaction):
        dis = interaction.guild.get_role(997425508608397312)
        space = interaction.guild.get_role(1046403300435697754)
        roles = interaction.user.roles

        def check(rr):
            if rr in roles:
                return True
            return False
        async def process(rolee):
            if rolee not in roles:
                await interaction.user.add_roles(rolee)
                return True


        if self.values[0] == "–ù—é—Ö–∞–π –∫–æ—Å–º–æ—Å": give = space
        if self.values[0] == "–î–∏—Å–∫—É—Å—Å–∏–∏": give = dis

        if await process(give) and check(give) is False:
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!*', ephemeral = True)
        if check(give):
            await interaction.response.send_message(f'*–†–æ–ª—å —É–∂–µ –≤—ã–¥–∞–Ω–∞!*', ephemeral = True)

class AccessSelectRemove(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ù—é—Ö–∞–π –∫–æ—Å–º–æ—Å", emoji="üåå", description="–ß—Ç–æ —Å—Ç–æ–∏—à—å? –ù—é—Ö–∞–π!"),
            discord.SelectOption(label="–î–∏—Å–∫—É—Å—Å–∏–∏", emoji="üí¢", description="–õ–∞–¥–Ω–æ."),
        ]
        super().__init__(placeholder="–£–±—Ä–∞—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:accessremove')

    async def callback(self, interaction: discord.Interaction):
        dis = interaction.guild.get_role(997425508608397312)
        space = interaction.guild.get_role(1046403300435697754)
        roles = interaction.user.roles

        def check(rr):
            if rr in roles:
                return True
            return False
        async def process(rolee):
            if rolee in roles:
                await interaction.user.remove_roles(rolee)
                return False


        if self.values[0] == "–ù—é—Ö–∞–π –∫–æ—Å–º–æ—Å": give = space
        if self.values[0] == "–î–∏—Å–∫—É—Å—Å–∏–∏": give = dis

        if check(give) and await process(give) is False:
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω–∞!*', ephemeral = True)
        if check(give) is False:
            await interaction.response.send_message(f'*–£ –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Ä–æ–ª–º!*', ephemeral = True)

class GenderSelectAdd(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ü–∞—Ä–µ–Ω—å", emoji="üë¶", description="–ü–∞—Ä–µ–Ω—å, –Ω–µ –±–æ–ª–µ–µ."),
            discord.SelectOption(label="–î–µ–≤—É—à–∫–∞", emoji="üëß", description="–õ–∞–¥–Ω–æ."),
            discord.SelectOption(label="–†—Ö–µ–∏–Ω–º–µ—Ç–∞–ª –ë–æ—Ä–∏—Å –í–∞—Ñ–µ–Ω—Ç—Ä–∞—Ö–µ—Ä", emoji="üéá", description="–ê–ª—å—Ñ–∞-—Å–∞–º–µ—Ü"),
        ]
        super().__init__(placeholder="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:genderadd')

    async def callback(self, interaction: discord.Interaction):
        man = interaction.guild.get_role(997425535263191100)
        woman = interaction.guild.get_role(997425536190132265)
        chad = interaction.guild.get_role(997425537133842433)
        roles = interaction.user.roles

        def check():
            listt = [man, woman, chad]
            for rr in listt:
                if rr in roles:
                    return True
            return False

        if self.values[0] == "–ü–∞—Ä–µ–Ω—å": give = man
        if self.values[0] == "–î–µ–≤—É—à–∫–∞": give = woman
        if self.values[0] == "–†—Ö–µ–∏–Ω–º–µ—Ç–∞–ª –ë–æ—Ä–∏—Å –í–∞—Ñ–µ–Ω—Ç—Ä–∞—Ö–µ—Ä": give = chad

        if give not in roles and check() is False:
            await interaction.user.add_roles(give)
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!*', ephemeral=True)
        if check():
            await interaction.response.send_message(f'*–í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä–æ–ª—å!*', ephemeral=True)

class NotifySelectAdd(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ü–æ–¥–ø–∏—Å—á–∏–∫", emoji="üîî", description="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ –≤–∏–¥–æ—Å–æ–≤"),
            discord.SelectOption(label="–ù–æ–≤–æ—Å—Ç–∏", emoji="üì∞", description="–ù–æ–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"),
            discord.SelectOption(label="–û–ø—Ä–æ—Å—ã", emoji="üìä", description="–û–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"),
            discord.SelectOption(label="–°–æ–±—ã—Ç–∏—è", emoji="üéá", description="–ò–≤–µ–Ω—Ç—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ"),
            discord.SelectOption(label="–û–∂–∏–≤–ª—è–π —á–∞—Ç, –ª–æ–ª", emoji="üêí", description="–û—Å–æ–±–µ–Ω–Ω–∞—è —Ä–æ–ª—å"),
        ]
        super().__init__(placeholder="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:notifyadd')

    async def callback(self, interaction: discord.Interaction):
        sub = interaction.guild.get_role(997425507836645506)
        news = interaction.guild.get_role(997425506960015410)
        poll = interaction.guild.get_role(997425510265135145)
        event = interaction.guild.get_role(997425511238209566)
        deadchat = interaction.guild.get_role(997425504485384253)
        roles = interaction.user.roles

        def check(rr):
            if rr in roles:
                return True
            return False
        async def process(rolee):
            if rolee not in roles:
                await interaction.user.add_roles(rolee)
                return True


        if self.values[0] == "–ü–æ–¥–ø–∏—Å—á–∏–∫": give = sub
        if self.values[0] == "–ù–æ–≤–æ—Å—Ç–∏": give = news
        if self.values[0] == "–û–ø—Ä–æ—Å—ã": give = poll
        if self.values[0] == "–°–æ–±—ã—Ç–∏—è": give = event
        if self.values[0] == "–û–∂–∏–≤–ª—è–π —á–∞—Ç, –ª–æ–ª": give = deadchat


        if await process(give) and check(give) is False:
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞!*', ephemeral = True)
        if check(give):
            await interaction.response.send_message(f'*–†–æ–ª—å —É–∂–µ –≤—ã–¥–∞–Ω–∞!*', ephemeral = True)

class NotifySelectRemove(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ü–æ–¥–ø–∏—Å—á–∏–∫", emoji="üîî", description="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ –≤–∏–¥–æ—Å–æ–≤"),
            discord.SelectOption(label="–ù–æ–≤–æ—Å—Ç–∏", emoji="üì∞", description="–ù–æ–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"),
            discord.SelectOption(label="–û–ø—Ä–æ—Å—ã", emoji="üìä", description="–û–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"),
            discord.SelectOption(label="–°–æ–±—ã—Ç–∏—è", emoji="üéá", description="–ò–≤–µ–Ω—Ç—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ"),
            discord.SelectOption(label="–û–∂–∏–≤–ª—è–π —á–∞—Ç, –ª–æ–ª", emoji="üêí", description="–û—Å–æ–±–µ–Ω–Ω–∞—è —Ä–æ–ª—å"),
        ]
        super().__init__(placeholder="–£–±—Ä–∞—Ç—å —Ä–æ–ª—å", max_values=1, min_values=0, options=options, custom_id = 'role:notifyremove')

    async def callback(self, interaction: discord.Interaction):
        sub = interaction.guild.get_role(997425507836645506)
        news = interaction.guild.get_role(997425506960015410)
        poll = interaction.guild.get_role(997425510265135145)
        event = interaction.guild.get_role(997425511238209566)
        deadchat = interaction.guild.get_role(997425504485384253)
        roles = interaction.user.roles

        def check(rr):
            if rr in roles:
                return True
            return False
        async def process(rolee):
            if rolee in roles:
                await interaction.user.remove_roles(rolee)
                return True


        if self.values[0] == "–ü–æ–¥–ø–∏—Å—á–∏–∫": give = sub
        if self.values[0] == "–ù–æ–≤–æ—Å—Ç–∏": give = news
        if self.values[0] == "–û–ø—Ä–æ—Å—ã": give = poll
        if self.values[0] == "–°–æ–±—ã—Ç–∏—è": give = event
        if self.values[0] == "–û–∂–∏–≤–ª—è–π —á–∞—Ç, –ª–æ–ª": give = deadchat

        if check(give) and await process(give):
            await interaction.response.send_message(f'*–†–æ–ª—å <@&{give.id}> —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω–∞!*', ephemeral = True)
        if check(give) is False:
            await interaction.response.send_message(f'*–£ –í–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏!*', ephemeral = True)

class CountryView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(CountrySelectAdd())
        self.add_item(CountrySelectRemove())

class AccessView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(AccessSelectAdd())
        self.add_item(AccessSelectRemove())

class NotifyView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(NotifySelectAdd())
        self.add_item(NotifySelectRemove())

class GenderView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(GenderSelectAdd())

class role(commands.Cog):

    def __init__(self, client):
        self.client = client

    @commands.command()
    @commands.has_permissions(administrator = True)
    async def role(self, ctx):
        country = discord.Embed(
            title = "„Éª‚ñ¨‚ñ¨‚ñ¨ –û—Ç–∫—É–¥–∞ –≤—ã? ‚ñ¨‚ñ¨‚ñ¨„Éª",
            description = "<a:1041076662546219168:1041076662546219168> :flag_ru: ‚Äî <@&997425518460817470>\n<a:1041076662546219168:1041076662546219168> :flag_ua: ‚Äî <@&997425520675397682>\n<a:1041076662546219168:1041076662546219168> :flag_kz: ‚Äî <@&997425521736568842>\n<a:1041076662546219168:1041076662546219168> :flag_by:  ‚Äî <@&997425519693942784>\n<a:1041076662546219168:1041076662546219168> :flag_uz: ‚Äî <@&997425522650914866>\n<a:1041076662546219168:1041076662546219168> :flag_am: ‚Äî <@&997425523460427878>\n<a:1041076662546219168:1041076662546219168> :flag_az: ‚Äî <@&997425523946946612>\n<a:1041076662546219168:1041076662546219168> :flag_md: ‚Äî <@&997425525494657054>\n<a:1041076662546219168:1041076662546219168> :flag_tj: ‚Äî <@&997425526434168832>\n<a:1041076662546219168:1041076662546219168> :flag_kg: ‚Äî <@&997425527017177189>\n<a:1041076662546219168:1041076662546219168> :flag_eu: ‚Äî <@&1027289604862251017>",
            color = 0xdd8d03
        )
        access = discord.Embed(
            title = "„Éª‚ñ¨‚ñ¨‚ñ¨ –†–æ–ª–∏ –î–æ—Å—Ç—É–ø–∞ ‚ñ¨‚ñ¨‚ñ¨„Éª",
            description = "<a:1041076662546219168:1041076662546219168> üî≠ ‚Äî <@&1046403300435697754> ‚Äî –î–æ—Å—Ç—É–ø –∫ <#1046391794977480704>\n<a:1041076662546219168:1041076662546219168> üóØ ‚Äî <@&997425508608397312> ‚Äî –î–æ—Å—Ç—É–ø –∫ <#1046377259415646219>, <#1025037833888600064>, <#1046377188146028635>",
            color = 0xdd8d03
        )
        notify = discord.Embed(
            title = "„Éª‚ñ¨‚ñ¨‚ñ¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚ñ¨‚ñ¨‚ñ¨„Éª",
            description = '<a:1041076662546219168:1041076662546219168> :bell: ‚Äî <@&997425507836645506> ‚Äî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ\n<a:1041076662546219168:1041076662546219168> :newspaper: ‚Äî <@&997425506960015410> ‚Äî –ù–æ–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞\n<a:1041076662546219168:1041076662546219168> :bar_chart: ‚Äî <@&997425510265135145> ‚Äî –û–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n<a:1041076662546219168:1041076662546219168> :fireworks: ‚Äî <@&997425511238209566> ‚Äî –û–±—ã—á–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã, —Å–æ–±—ã—Ç–∏—è –∏ –∏–≤–µ–Ω—Ç—ã. \n<a:1041076662546219168:1041076662546219168> :monkey: ‚Äî <@&997425504485384253> ‚Äî  –û—Å–æ–±–µ–Ω–Ω–∞—è —Ä–æ–ª—å. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–∑ –∞–≤—Ç–æ–≤—ã–¥–∞–≤–∞–µ–º—ã—Ö —Ä–æ–ª–µ–π, –∏–∑–º–µ–Ω—è—é—â–∞—è —Ü–≤–µ—Ç. –í—ã –±–µ—Ä–µ—Ç–µ —ç—Ç—É —Ä–æ–ª—å –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫!',
            color = 0xdd8d03
        )
        gender = discord.Embed(
            title = "„Éª‚ñ¨‚ñ¨‚ñ¨ –ü–æ–ª ‚ñ¨‚ñ¨‚ñ¨„Éª",
            description = "<a:1041076662546219168:1041076662546219168> :boy: ‚Äî <@&997425535263191100>\n<a:1041076662546219168:1041076662546219168> :girl: ‚Äî <@&997425536190132265>\n<a:1041076662546219168:1041076662546219168> :clown: ‚Äî <@&997425537133842433>",
            color = 0xdd8d03
        )
        country.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        access.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        notify.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        gender.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)

        await ctx.send(embed = country, view = CountryView())
        await ctx.send(embed = access, view = AccessView())
        await ctx.send(embed = notify, view = NotifyView())
        await ctx.send(embed = gender, view = GenderView())


async def setup(client):
    await client.add_cog(role(client))