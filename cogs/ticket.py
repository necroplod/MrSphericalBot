import discord
import re
import settings
import datetime
from discord.ext import commands

class TicketPanel(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    @discord.ui.button(emoji='üîì', style=discord.ButtonStyle.green, label='–û—Ç–∫—Ä—ã—Ç—å', custom_id = "panel:open")
    async def open(self, interaction: discord.Interaction, button: discord.ui.Button):
        ch = interaction.channel
        name = ch.name.replace("closed", "ticket")
        await ch.edit(name=name)
        await ch.set_permissions(
            interaction.user,
            send_messages=True,
            read_message_history=True,
            read_messages=True
        )
        embed = discord.Embed(
            title="ü•ä | –¢–∏–∫–µ—Ç—ã",
            description=f"<a:768563657390030971:1041076662546219168>  *–¢–∏–∫–µ—Ç –æ—Ç–∫—Ä—ã—Ç <@{interaction.user.id}>*",
            color=0x370acd
        )
        embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        await interaction.response.send_message(embed=embed)

    @discord.ui.button(emoji = 'üÄÑ', style = discord.ButtonStyle.blurple, label = '–í –∞—Ä—Ö–∏–≤', custom_id = "panel:archive")
    async def archive(self, interaction: discord.Interaction, button: discord.ui.Button):
        user = interaction.user
        ch = interaction.channel
        role = interaction.guild.get_role(settings.roles.archive_channels)
        if role in user.roles:
            category = discord.utils.get(interaction.guild.channels, name=settings.channels.ticket_archive)
            if len(category.channels) > 48:
                embed = discord.Embed(
                    title="üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                    description="<a:768563657390030971:1041076662546219168> **–ê—Ä—Ö–∏–≤ –∑–∞—Å–æ—Ä–∏–ª—Å—è!**",
                    color=0x674ea7
                )
                embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
                embed.set_image(url="https://media.tenor.com/r3t0LfS0dCwAAAAd/toilet-meme.gif")
                await interaction.response.edit_message(view=None, embed=embed)
            else:
                embed = discord.Embed(
                    title="üìö | –ê—Ä—Ö–∏–≤ –ö–∞–Ω–∞–ª–æ–≤",
                    description="<a:768563657390030971:1041076662546219168> **–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –≤ –∞—Ä—Ö–∏–≤....**",
                    color=0x674ea7
                )
                embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
                await interaction.response.edit_message(view=None, embed=embed)
                await ch.edit(
                    sync_permissions=True,
                    category=category,
                    reason=f'–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ | {interaction.user.name}#{interaction.user.discriminator}'
                )
                logs = discord.Embed(
                    title="ü•ä | –¢–∏–∫–µ—Ç—ã",
                    description=f'''
                    <a:768563657390030971:1041076662546219168> **–î–µ–π—Å—Ç–≤–∏–µ:** –ê—Ä—Ö–∏–≤–∞—Ü–∏—è —Ç–∏–∫–µ—Ç–∞
                    <a:768563657390030971:1041076662546219168> **–¢–∏–∫–µ—Ç:** {ch.name}
                    <a:768563657390030971:1041076662546219168> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** <@{interaction.user.id}>''',
                    color=0x370acd,
                )
                logs.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
                logsch = discord.utils.get(interaction.guild.channels, id=settings.channels.tickets_logs)
                await logsch.send(embed=logs)
        else:
            await interaction.response.send_message(f'**–£ –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ–ª—å <@&{settings.roles.archive_channels}>!**', ephemeral=True)
    @discord.ui.button(emoji='‚õî', style=discord.ButtonStyle.red, label='–£–¥–∞–ª–∏—Ç—å', custom_id = "panel:close")
    async def delete(self, interaction: discord.Interaction, button: discord.ui.Button):
        user = interaction.user
        ch = interaction.channel
        role = interaction.guild.get_role(settings.roles.manage_tickets)
        if role in user.roles:
            messages = []
            start = datetime.datetime.now()
            async for message in interaction.channel.history(limit=None, oldest_first=True):
                if message.author.bot:
                    pass
                else:
                    message_content = f"*{message.created_at.strftime('%d.%m %H:%M:%S')}* <@{message.author.id}>: *{message.clean_content}*"
                    messages.append(message_content)

            logsch = discord.utils.get(interaction.guild.channels, id=settings.channels.tickets_logs)

            logs = discord.Embed(
                title="ü•ä | –¢–∏–∫–µ—Ç—ã",
                description=f'''
                <a:768563657390030971:1041076662546219168> **–î–µ–π—Å—Ç–≤–∏–µ:** –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
                <a:768563657390030971:1041076662546219168> **–¢–∏–∫–µ—Ç:** {ch.name}
                <a:768563657390030971:1041076662546219168> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** <@{interaction.user.id}>''',
                color=0x370acd
            )
            logs.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
            msg = discord.Embed(
                description = '\n'.join(messages),
                color = 0x370acd
            )
            msg.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)

            if len(msg.description) > 4095:
                await logsch.send(embed = logs)
            else:
                await logsch.send(embeds=[logs, msg])
            await interaction.response.send_message('*–£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞...*')
            await ch.delete()
        else:
            await interaction.response.send_message(f'**–£ –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ–ª—å <@&{settings.roles.manage_tickets}>!**', ephemeral=True)

class TicketClose(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(emoji='üîí', style=discord.ButtonStyle.red, label='–ó–∞–∫—Ä—ã—Ç—å', custom_id = "close:close")
    async def close(self, interaction: discord.Interaction, button: discord.ui.Button):
        topic = interaction.channel.topic
        ch = interaction.channel

        mods = interaction.guild.get_role(settings.roles.mods_tickets)
        idd = re.search(r'\<@(.*)\>', topic, re.DOTALL).group(1)


        name = ch.name.replace("ticket", "closed")
        await ch.edit(name = name)
        await ch.set_permissions(
            interaction.user,
            send_messages=False,
            read_message_history=True,
            read_messages=True
        )
        embed = discord.Embed(
            title="ü•ä | –¢–∏–∫–µ—Ç—ã",
            description=f"<a:768563657390030971:1041076662546219168>  *–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç <@{interaction.user.id}>*",
            color=0x370acd
        )
        embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        manage = discord.Embed(description="```–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è```")
        logs = discord.Embed(
            title = "ü•ä | –¢–∏–∫–µ—Ç—ã",
            description = f'''
            <a:768563657390030971:1041076662546219168> **–î–µ–π—Å—Ç–≤–∏–µ:** –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞
            <a:768563657390030971:1041076662546219168> **–¢–∏–∫–µ—Ç:** {ch.name}
            <a:768563657390030971:1041076662546219168> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** <@{interaction.user.id}>''',
            color = 0x370acd,
        )
        logs.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        logsch = discord.utils.get(interaction.guild.channels, id = settings.channels.tickets_logs)
        await logsch.send(embed=logs)
        await interaction.response.send_message(embeds=[embed, manage], view = TicketPanel())

    @discord.ui.button(emoji='üîí', style=discord.ButtonStyle.red, label='–ü–µ—Ä–µ–¥–∞—Ç—å —Ç–∏–∫–µ—Ç', custom_id = "close:transfer")
    async def transfer(self, interaction: discord.Interaction, button: discord.ui.Button):
        role = interaction.guild.get_role(settings.roles.mods_tickets)
        notify = interaction.guild.get_channel(settings.channels.ticket_notify)
        ch = interaction.channel
        user = interaction.user
        topic = interaction.channel.topic

        idd = re.search(r'\<@(.*)\>', topic, re.DOTALL).group(1)
        tickets_count = interaction.guild.get_channel(settings.channels.tickets_count)
        flatten = [msg async for msg in tickets_count.history(limit=100)]
        msg = discord.utils.get(flatten, id=settings.misc.tickets_count)
        countt = msg.content

        if role in user.roles:
            embed = discord.Embed(
                title = "ü•ä | –¢–∏–∫–µ—Ç—ã",
                description = f"***–¢–∏–∫–µ—Ç –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω!***\n<a:768563657390030971:1041076662546219168> –ê–≤—Ç–æ—Ä: <@{idd}>\n<a:768563657390030971:1041076662546219168> –ù–æ–º–µ—Ä: {countt}\n<a:768563657390030971:1041076662546219168> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: <@{interaction.user.id}>",
                color = 0x370acd
            )
            await ch.set_permissions(
                interaction.user,
                send_messages=False,
                read_message_history=False,
                read_messages=False
            )
            global id_
            id_ = ch.id
            await notify.send('<@&1071505429462519938>', embed=embed, view=TicketWait())
            await interaction.response.send_message(f'*–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä <@{interaction.user.id}> –ø–µ—Ä–µ–¥–∞–ª —Ç–∏–∫–µ—Ç –¥—Ä—É–≥–æ–º—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ.*')
        else:
            await interaction.response.send_message(f'**–£ –í–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ–ª—å <@&{settings.roles.mods_tickets}>!**', ephemeral=True)


class TicketAppeal(discord.ui.Modal, title = 'üì® | –ê–ø–µ–ª–ª—è—Ü–∏–∏'):
    mod = discord.ui.TextInput(label = "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", placeholder = "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä, –≤—ã–¥–∞–≤—à–∏–π –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", required = True)
    time = discord.ui.TextInput(label = "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è", placeholder = "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –≤–∞–º –≤—ã–¥–∞–ª–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", required = True)
    reason = discord.ui.TextInput(label = "–ü—Ä–∏—á–∏–Ω–∞", placeholder="–ü–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ(-–∞–º) –≤–∞–º –≤—ã–¥–∞–ª–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", required = True)
    why = discord.ui.TextInput(label = "–ü–æ—á–µ–º—É", placeholder = "–ü–æ—á–µ–º—É –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ/–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–≤—ã—Å–∏–ª —Å–≤–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è?", required = True)
    async def on_submit(self, interaction: discord.Interaction):
        guild = interaction.guild
        notify = interaction.guild.get_channel(settings.channels.appeal_notify)
        tickets = discord.utils.get(guild.channels, name=settings.channels.tickets)
        tickets_count = interaction.guild.get_channel(settings.channels.tickets_count)
        flatten = [msg async for msg in tickets_count.history(limit=100)]
        msg = discord.utils.get(flatten, id=settings.misc.tickets_count)
        count = msg.content
        count = count[1:]
        count = int(f"1{count}")
        count = count + 1
        count = str(count)
        count = count[1:]
        count = str(f"0{count}")

        await interaction.response.send_message('*–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞.. –û–∂–∏–¥–∞–π—Ç–µ.*', ephemeral=True)
        senior = guild.get_role(settings.roles.senior_mod)

        ch = await guild.create_text_channel(
            name=f'ticket-{count}',
            category=tickets,
            topic=f"**–ê–≤—Ç–æ—Ä:** <@{interaction.user.id}>\n**–ù–æ–º–µ—Ä —Ç–∏–∫–µ—Ç–∞:** {count}\n**–¢–µ–º–∞:** –ê–ø–µ–ª–ª—è—Ü–∏—è",
            reason=f"–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞ | {interaction.user.name}#{interaction.user.discriminator}"
        )
        await ch.set_permissions(
            guild.default_role,
            view_channel=False,
            send_messages=False,
        )
        await ch.set_permissions(
            interaction.user,
            send_messages=True,
            read_message_history=True,
            read_messages=True
        )
        await ch.set_permissions(
            senior,
            send_messages=True,
            read_message_history=True,
            read_messages=True
        )
        await msg.edit(content=str(count))
        embed = discord.Embed(
            title="ü•ä | –¢–∏–∫–µ—Ç—ã",
            description=f"*–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.\n–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.*\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏:*\n```–¢–µ–º–∞: –ê–ø–µ–ª–ª—è—Ü–∏—è\n1. {self.mod.value}\n2. {self.time.value}\n3. {self.reason.value}\n4. {self.why.value}```",
            color=0x370acd
        )
        embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
        await ch.send(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <@{interaction.user.id}>', embed=embed, view=TicketClose())

        global id_
        id_ = ch.id

        embed = discord.Embed(
            title="ü•ä | –¢–∏–∫–µ—Ç—ã",
            description=f"***–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç!***\n<a:768563657390030971:1041076662546219168> –ê–≤—Ç–æ—Ä: <@{interaction.user.id}>\n<a:768563657390030971:1041076662546219168> –¢–µ–º–∞: –ê–ø–µ–ª–ª—è—Ü–∏–∏\n<a:768563657390030971:1041076662546219168> –ù–æ–º–µ—Ä: {count}",
            color=0x370acd
        )
        await notify.send('<@&1071505429462519938>', embed=embed, view=TicketWait())

class TicketWait(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(emoji='üé≤', style=discord.ButtonStyle.green, label='–ü—Ä–∏–Ω—è—Ç—å', custom_id="ticket:waitmod")
    async def agree(self, interaction: discord.Interaction, button: discord.ui.Button):
        ch = interaction.guild.get_channel(id_)
        tickets_count = interaction.guild.get_channel(settings.channels.tickets_count)
        flatten = [msg async for msg in tickets_count.history(limit=100)]
        msg = discord.utils.get(flatten, id=settings.misc.tickets_count)
        count = msg.content


        await ch.send(f'*–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä <@{interaction.user.id}> –≤–∑—è–ª—Å—è –∑–∞ —Ç–∏–∫–µ—Ç –∏ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç, –æ–∂–∏–¥–∞–π—Ç–µ.*')
        await ch.set_permissions(
            interaction.user,
            send_messages=True,
            read_message_history=True,
            read_messages=True
        )
        await interaction.response.edit_message(content = f'*–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä <@{interaction.user.id}> –ø—Ä–∏–Ω—è–ª —Ç–∏–∫–µ—Ç ‚Ññ{count}.*', embed=None, view=None)

class Select(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label = "–ñ–∞–ª–æ–±–∞", emoji = "ü•ä", description = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –Ω–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è!"),
            discord.SelectOption(label = "–í–æ–ø—Ä–æ—Å", emoji = "üîé", description = "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å"),
            discord.SelectOption(label = "–ê–ø–µ–ª–ª—è—Ü–∏—è", emoji = "üì®", description = "–ü–æ–¥–∞–π—Ç–µ –∞–ø–µ–ª–ª—è—Ü–∏—é"),
            discord.SelectOption(label = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏–∫–µ—Ç", emoji = "üé≥", description = "–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ä–æ–ª–∏ –∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å? –¢–æ–≥–¥–∞ –í–∞–º —Å—é–¥–∞.")
        ]
        super().__init__(placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É —Ç–∏–∫–µ—Ç–∞",max_values=1, min_values=1, options=options)
    async def callback(self, interaction: discord.Interaction):
        if self.values[0] == "–ñ–∞–ª–æ–±–∞" or self.values[0] == "–í–æ–ø—Ä–æ—Å" or self.values[0] == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏–∫–µ—Ç":
            if self.values[0] == "–ñ–∞–ª–æ–±–∞":
                topic = "–ñ–∞–ª–æ–±–∞"
            elif self.values[0] == "–í–æ–ø—Ä–æ—Å":
                topic = "–í–æ–ø—Ä–æ—Å"
            elif self.values[0] == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏–∫–µ—Ç":
                topic = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏–∫–µ—Ç"

            guild = interaction.guild
            tickets = discord.utils.get(guild.channels, name=settings.channels.tickets)
            tickets_count = interaction.guild.get_channel(settings.channels.tickets_count)
            mods = guild.get_role(settings.roles.mods_tickets)
            notify = interaction.guild.get_channel(settings.channels.ticket_notify)
            tech = interaction.guild.get_channel(settings.channels.tech_ticket)

            flatten = [msg async for msg in tickets_count.history(limit=100)]
            msg = discord.utils.get(flatten, id=settings.misc.tickets_count)
            global count
            count = msg.content
            count = count[1:]
            count = int(f"1{count}")
            count = count + 1
            count = str(count)
            count = count[1:]
            count = str(f"0{count}")

            await interaction.response.send_message('*–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞.. –û–∂–∏–¥–∞–π—Ç–µ.*', ephemeral=True)
            ch = await guild.create_text_channel(
                name=f'ticket-{count}',
                category=tickets,
                topic=f"**–ê–≤—Ç–æ—Ä:** <@{interaction.user.id}>\n**–ù–æ–º–µ—Ä —Ç–∏–∫–µ—Ç–∞:** {count}\n**–¢–µ–º–∞:** {topic}",
                reason=f"–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞ | {interaction.user.name}#{interaction.user.discriminator}"
            )
            await ch.set_permissions(
                guild.default_role,
                view_channel=False,
                send_messages=False,
            )
            await ch.set_permissions(
                interaction.user,
                send_messages=True,
                read_message_history=True,
                read_messages=True
            )
            await msg.edit(content=str(count))
            embed = discord.Embed(
                title="ü•ä | –¢–∏–∫–µ—Ç—ã",
                description=f"*–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.\n–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.*\n*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏:*\n```–¢–µ–º–∞: {topic}```",
                color=0x370acd
            )
            embed.set_footer(icon_url=settings.misc.avatar_url, text=settings.misc.footer)
            await ch.send(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <@{interaction.user.id}>', embed=embed, view=TicketClose())
            embed = discord.Embed(
                title = "ü•ä | –¢–∏–∫–µ—Ç—ã",
                description = f"***–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç!***\n<a:768563657390030971:1041076662546219168> –ê–≤—Ç–æ—Ä: <@{interaction.user.id}>\n<a:768563657390030971:1041076662546219168> –¢–µ–º–∞: {topic}\n<a:768563657390030971:1041076662546219168> –ù–æ–º–µ—Ä: {count}",
                color = 0x370acd
            )
            global id_
            id_ = ch.id

            if self.values[0] == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏–∫–µ—Ç":
                await tech.send('<@&1071505429462519938>', embed=embed, view = TicketWait())
            else:
                await notify.send('<@&1071505429462519938>', embed=embed, view = TicketWait())

        elif self.values[0] == "–ê–ø–µ–ª–ª—è—Ü–∏—è":
            topic = "–ê–ø–µ–ª–ª—è—Ü–∏—è"
            await interaction.response.send_modal(TicketAppeal())

class SelectView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(Select())
class PersistentView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    @discord.ui.button(emoji='üé≤', style=discord.ButtonStyle.green, label = '–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', custom_id = "persistent_view:create")
    async def create(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message(view = SelectView(), ephemeral = True)

class ticket(commands.Cog):

    def __init__(self, client):
        self.client = client

    @commands.command()
    @commands.has_any_role(1071141626866569286)
    async def ticket(self, ctx):
        embed = discord.Embed(
            title = "ü•ä | –¢–∏–∫–µ—Ç—ã",
            description = "<a:768563657390030971:1041076662546219168> *–£ –í–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –∂–∞–ª–æ–±–∞ –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ä–æ–ª—å –∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å? –ü–æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –±–æ—Ç —Å–æ–∑–¥–∞—Å—Ç —Ç–∏–∫–µ—Ç-–∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –Ω–∞—á–Ω—ë—Ç–µ —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏.*",
            color = 0x370acd
        )
        embed.set_footer(icon_url=self.client.user.avatar.url, text=f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
        await ctx.send(embed=embed, view = PersistentView())

async def setup(client):
    await client.add_cog(ticket(client))